
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Base64;
import javax.swing.JOptionPane;
import java.sql.Timestamp;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author acv
 */
public class MainFrame extends javax.swing.JFrame {

    /**
     * Creates new form MainFrame
     */
    private String currentSemester;
    private String author;
    private String project;

    public MainFrame() {
        initComponents();
        checkData();
        rebuildSemesterComboBoxes();
        rebuildCourseComboBoxes();
        rebuildClassComboBoxes();
        rebuildStudentComboBoxes();
        rebuildScheduleComboBoxes();
    }

    public void rebuildSemesterComboBoxes() {
        ArrayList<String> semesters = SemesterQueries.getSemesterList();
        currentSemesterComboBox.setModel(new javax.swing.DefaultComboBoxModel(semesters.toArray()));
        
        if (semesters.size() > 0) {
            if(currentSemester == null){
              currentSemester = semesters.getLast();
            }
            currentSemesterLabel.setText(currentSemester);
            currentSemesterComboBox.setSelectedItem(currentSemester);
        } else {
            currentSemesterLabel.setText("None, add a semester.");
            currentSemester = "None";
        }
    }
    
    public void rebuildCourseComboBoxes(){
        ArrayList<String> courses = CourseQueries.getAllCourseCodes();
        addClassCourseCodeComboBox.setModel(new javax.swing.DefaultComboBoxModel(courses.toArray()));
    }
    
    public void rebuildClassComboBoxes(){
        ArrayList<String> classes = ClassQueries.getAllCourseCodes(currentSemester);
        displayClassChooseClassComboBox.setModel(new javax.swing.DefaultComboBoxModel(classes.toArray()));
        chooseDropClassAdminBox.setModel(new javax.swing.DefaultComboBoxModel(classes.toArray()));
        scheduleClassSelectCourseComboBox.setModel(new javax.swing.DefaultComboBoxModel(classes.toArray()));
    }
    
    // get the actual object, write a toString, update old code that direcly used the combo box
    // see if you can use a getter to get a specific attribute from combo box
    // if you are able to insert an object into the box
    public void rebuildStudentComboBoxes(){
        ArrayList<StudentEntry> students = StudentQueries.getAllStudents();
        chooseDropStudentBox.setModel(new javax.swing.DefaultComboBoxModel(students.toArray()));
        scheduleClassSelectStudentComboBox.setModel(new javax.swing.DefaultComboBoxModel(students.toArray()));
        displayScheduleSelectStudentComboBox.setModel(new javax.swing.DefaultComboBoxModel(students.toArray()));
        dropClassChooseStudentStudentBox.setModel(new javax.swing.DefaultComboBoxModel(students.toArray()));
    }
    
    public void rebuildScheduleComboBoxes(){
        StudentEntry student = (StudentEntry) dropClassChooseStudentStudentBox.getSelectedItem();
        if(student != null){
            ArrayList<ScheduleEntry> dropClassSchedule = ScheduleQueries.getScheduleByStudent(currentSemester, student.getID());
            ArrayList<String> codes = new ArrayList<String>();
            for(ScheduleEntry e:dropClassSchedule){
                codes.add(e.getScheduleCode());
            }
            dropClassChooseClassStudentBox.setModel(new javax.swing.DefaultComboBoxModel(codes.toArray()));
        }
    }
    
    public void rebuildAllComboBoxes(){
        rebuildSemesterComboBoxes();
        rebuildCourseComboBoxes();
        rebuildClassComboBoxes();
        rebuildStudentComboBoxes();
        rebuildScheduleComboBoxes();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        adminPane = new javax.swing.JTabbedPane();
        AddSemesterTab = new javax.swing.JPanel();
        addSemesterLabel = new javax.swing.JLabel();
        addSemesterTextfield = new javax.swing.JTextField();
        addSemesterSubmitButton = new javax.swing.JButton();
        addSemesterStatusLabel = new javax.swing.JLabel();
        addCourseTab = new javax.swing.JPanel();
        addCourseCodeLabel = new javax.swing.JLabel();
        addCourseCodeTextField = new javax.swing.JTextField();
        addCourseDescriptionLabel = new javax.swing.JLabel();
        addCourseDescriptionTextField = new javax.swing.JTextField();
        addCourseSubmitButton = new javax.swing.JButton();
        addCourseStatusLabel = new javax.swing.JLabel();
        addStudentTab = new javax.swing.JPanel();
        addStudentIDLabel = new javax.swing.JLabel();
        addStudentFirstNameLabel = new javax.swing.JLabel();
        addStudentLastNameLabel = new javax.swing.JLabel();
        addStudentLastNameTextField = new javax.swing.JTextField();
        addStudentIDTextField = new javax.swing.JTextField();
        addStudentFirstNameTextField = new javax.swing.JTextField();
        addStudentSubmitButton = new javax.swing.JButton();
        addStudentStatusLabel = new javax.swing.JLabel();
        AddClassTab = new javax.swing.JPanel();
        addClassCourseCodeLabel = new javax.swing.JLabel();
        addClassCapacityLabel = new javax.swing.JLabel();
        addClassSubmitButton = new javax.swing.JButton();
        addClassStatusLabel = new javax.swing.JLabel();
        addClassCourseCodeComboBox = new javax.swing.JComboBox<>();
        addClassCapacitySpinner = new javax.swing.JSpinner();
        DisplayClassListTab = new javax.swing.JPanel();
        displayClassChooseClassLabel = new javax.swing.JLabel();
        displayClassChooseClassComboBox = new javax.swing.JComboBox<>();
        scheduledStudentsTableLabel = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        scheduledStudentsTable = new javax.swing.JTable();
        waitlistedStudentsTableLabel = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        waitlistedStudentsTable = new javax.swing.JTable();
        displayClassButton = new javax.swing.JButton();
        DropStudentTab = new javax.swing.JPanel();
        chooseDropStudentLabel = new javax.swing.JLabel();
        chooseDropStudentBox = new javax.swing.JComboBox<>();
        dropStudentSubmitButton = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        droppedStudentTextField = new javax.swing.JTextArea();
        DropClassAdminTab = new javax.swing.JPanel();
        chooseDropClassLabel = new javax.swing.JLabel();
        chooseDropClassAdminBox = new javax.swing.JComboBox<>();
        dropClassSubmitButton = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        droppedClassTextField = new javax.swing.JTextArea();
        jPanel2 = new javax.swing.JPanel();
        studentPane = new javax.swing.JTabbedPane();
        displayClassesTab = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        displayClassesTable = new javax.swing.JTable();
        displayClassesDisplayButton = new javax.swing.JButton();
        schedueClassTab = new javax.swing.JPanel();
        scheduleClassSelectCourseLabel = new javax.swing.JLabel();
        scheduleClassSubmitButton = new javax.swing.JButton();
        scheduleClassStatusLabel = new javax.swing.JLabel();
        scheduleClassSelectStudentLabel = new javax.swing.JLabel();
        scheduleClassSelectCourseComboBox = new javax.swing.JComboBox<>();
        scheduleClassSelectStudentComboBox = new javax.swing.JComboBox<>();
        displayScheduleTab = new javax.swing.JPanel();
        displayScheduleSelectStudentComboBox = new javax.swing.JComboBox<>();
        displayScheduleStudentNameLabel = new javax.swing.JLabel();
        displayScheduleDisplayButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        displayScheduleTable = new javax.swing.JTable();
        dropClassStudentTab = new javax.swing.JPanel();
        dropClassChooseStudentLabel = new javax.swing.JLabel();
        dropClassAdminSubmitButton = new javax.swing.JButton();
        dropClassChooseClassLabel = new javax.swing.JLabel();
        dropClassChooseStudentStudentBox = new javax.swing.JComboBox<>();
        dropClassChooseClassStudentBox = new javax.swing.JComboBox<>();
        dropClassScrollPane = new javax.swing.JScrollPane();
        dropClassStudentTextArea = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        currentSemesterLabel = new javax.swing.JLabel();
        currentSemesterComboBox = new javax.swing.JComboBox<>();
        changeSemesterButton = new javax.swing.JButton();
        aboutButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Comic Sans MS", 1, 30)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 153, 153));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Course Scheduler");

        addSemesterLabel.setText("Semester Name:");

        addSemesterTextfield.setColumns(20);

        addSemesterSubmitButton.setText("Submit");
        addSemesterSubmitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addSemesterSubmitButtonActionPerformed(evt);
            }
        });

        addSemesterStatusLabel.setText("                                                   ");

        javax.swing.GroupLayout AddSemesterTabLayout = new javax.swing.GroupLayout(AddSemesterTab);
        AddSemesterTab.setLayout(AddSemesterTabLayout);
        AddSemesterTabLayout.setHorizontalGroup(
            AddSemesterTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AddSemesterTabLayout.createSequentialGroup()
                .addGroup(AddSemesterTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AddSemesterTabLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(addSemesterLabel)
                        .addGap(52, 52, 52)
                        .addComponent(addSemesterTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(AddSemesterTabLayout.createSequentialGroup()
                        .addGap(87, 87, 87)
                        .addComponent(addSemesterSubmitButton))
                    .addGroup(AddSemesterTabLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(addSemesterStatusLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 488, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        AddSemesterTabLayout.setVerticalGroup(
            AddSemesterTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AddSemesterTabLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(AddSemesterTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addSemesterLabel)
                    .addComponent(addSemesterTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(addSemesterSubmitButton)
                .addGap(68, 68, 68)
                .addComponent(addSemesterStatusLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        adminPane.addTab("Add Semester", AddSemesterTab);

        addCourseCodeLabel.setText("Course Code:");

        addCourseCodeTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCourseCodeTextFieldActionPerformed(evt);
            }
        });

        addCourseDescriptionLabel.setText("Course Description:");

        addCourseDescriptionTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCourseDescriptionTextFieldActionPerformed(evt);
            }
        });

        addCourseSubmitButton.setText("Submit");
        addCourseSubmitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCourseSubmitButtonActionPerformed(evt);
            }
        });

        addCourseStatusLabel.setText("         ");

        javax.swing.GroupLayout addCourseTabLayout = new javax.swing.GroupLayout(addCourseTab);
        addCourseTab.setLayout(addCourseTabLayout);
        addCourseTabLayout.setHorizontalGroup(
            addCourseTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addCourseTabLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(addCourseTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addCourseStatusLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 736, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(addCourseTabLayout.createSequentialGroup()
                        .addGroup(addCourseTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(addCourseDescriptionLabel)
                            .addComponent(addCourseCodeLabel))
                        .addGap(36, 36, 36)
                        .addGroup(addCourseTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(addCourseSubmitButton)
                            .addGroup(addCourseTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(addCourseCodeTextField)
                                .addComponent(addCourseDescriptionTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 153, Short.MAX_VALUE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        addCourseTabLayout.setVerticalGroup(
            addCourseTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addCourseTabLayout.createSequentialGroup()
                .addGroup(addCourseTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addCourseTabLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(addCourseCodeLabel))
                    .addComponent(addCourseCodeTextField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(addCourseTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(addCourseDescriptionLabel, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addCourseDescriptionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(addCourseSubmitButton)
                .addGap(57, 57, 57)
                .addComponent(addCourseStatusLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        adminPane.addTab("Add Course", addCourseTab);

        addStudentIDLabel.setText("Student ID:");

        addStudentFirstNameLabel.setText("First Name:");

        addStudentLastNameLabel.setText("Last Name:");

        addStudentSubmitButton.setText("Submit");
        addStudentSubmitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addStudentSubmitButtonActionPerformed(evt);
            }
        });

        addStudentStatusLabel.setText(" ");

        javax.swing.GroupLayout addStudentTabLayout = new javax.swing.GroupLayout(addStudentTab);
        addStudentTab.setLayout(addStudentTabLayout);
        addStudentTabLayout.setHorizontalGroup(
            addStudentTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addStudentTabLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(addStudentTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addStudentStatusLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 732, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(addStudentTabLayout.createSequentialGroup()
                        .addGroup(addStudentTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(addStudentIDLabel)
                            .addComponent(addStudentLastNameLabel)
                            .addComponent(addStudentFirstNameLabel))
                        .addGap(36, 36, 36)
                        .addGroup(addStudentTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(addStudentSubmitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(addStudentIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(addStudentFirstNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(addStudentLastNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        addStudentTabLayout.setVerticalGroup(
            addStudentTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addStudentTabLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(addStudentTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addStudentIDLabel)
                    .addComponent(addStudentIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(addStudentTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addStudentFirstNameLabel)
                    .addComponent(addStudentFirstNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(addStudentTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addStudentLastNameLabel)
                    .addComponent(addStudentLastNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addComponent(addStudentSubmitButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 234, Short.MAX_VALUE)
                .addComponent(addStudentStatusLabel)
                .addGap(49, 49, 49))
        );

        adminPane.addTab("Add Student", addStudentTab);

        addClassCourseCodeLabel.setText("Course Code:");

        addClassCapacityLabel.setText("Classroom Capacity:");

        addClassSubmitButton.setText("Submit");
        addClassSubmitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addClassSubmitButtonActionPerformed(evt);
            }
        });

        addClassStatusLabel.setText(" ");

        addClassCourseCodeComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addClassCourseCodeComboBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout AddClassTabLayout = new javax.swing.GroupLayout(AddClassTab);
        AddClassTab.setLayout(AddClassTabLayout);
        AddClassTabLayout.setHorizontalGroup(
            AddClassTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AddClassTabLayout.createSequentialGroup()
                .addGroup(AddClassTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AddClassTabLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(AddClassTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(addClassCourseCodeLabel)
                            .addComponent(addClassCapacityLabel))
                        .addGap(69, 69, 69)
                        .addGroup(AddClassTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(addClassCapacitySpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(addClassCourseCodeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(AddClassTabLayout.createSequentialGroup()
                        .addGap(97, 97, 97)
                        .addComponent(addClassSubmitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(AddClassTabLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(addClassStatusLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 730, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        AddClassTabLayout.setVerticalGroup(
            AddClassTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AddClassTabLayout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(AddClassTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addClassCourseCodeLabel)
                    .addComponent(addClassCourseCodeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(AddClassTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addClassCapacityLabel)
                    .addComponent(addClassCapacitySpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(addClassSubmitButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 252, Short.MAX_VALUE)
                .addComponent(addClassStatusLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(57, 57, 57))
        );

        adminPane.addTab("Add Class", AddClassTab);

        displayClassChooseClassLabel.setText("Choose Class:");

        scheduledStudentsTableLabel.setText("Scheduled Students in the Class");

        scheduledStudentsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "First Name", "Last Name", "StudentID"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane3.setViewportView(scheduledStudentsTable);

        waitlistedStudentsTableLabel.setText("Waitlisted Students in the Class in Waitlist Order");

        waitlistedStudentsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "First Name", "Last Name", "StudentID"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane4.setViewportView(waitlistedStudentsTable);

        displayClassButton.setText("Display");
        displayClassButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayClassButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout DisplayClassListTabLayout = new javax.swing.GroupLayout(DisplayClassListTab);
        DisplayClassListTab.setLayout(DisplayClassListTabLayout);
        DisplayClassListTabLayout.setHorizontalGroup(
            DisplayClassListTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DisplayClassListTabLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(DisplayClassListTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(DisplayClassListTabLayout.createSequentialGroup()
                        .addComponent(displayClassChooseClassLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)
                        .addComponent(displayClassChooseClassComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(49, 49, 49)
                        .addComponent(displayClassButton))
                    .addGroup(DisplayClassListTabLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(DisplayClassListTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(scheduledStudentsTableLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 612, Short.MAX_VALUE)
                            .addComponent(waitlistedStudentsTableLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane4))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        DisplayClassListTabLayout.setVerticalGroup(
            DisplayClassListTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DisplayClassListTabLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(DisplayClassListTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(displayClassChooseClassLabel)
                    .addComponent(displayClassChooseClassComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(displayClassButton))
                .addGap(18, 18, 18)
                .addComponent(scheduledStudentsTableLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addComponent(waitlistedStudentsTableLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        adminPane.addTab("Display Class List", DisplayClassListTab);

        chooseDropStudentLabel.setText("Choose Student:");

        dropStudentSubmitButton.setText("Submit");
        dropStudentSubmitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dropStudentSubmitButtonActionPerformed(evt);
            }
        });

        droppedStudentTextField.setColumns(20);
        droppedStudentTextField.setRows(5);
        jScrollPane5.setViewportView(droppedStudentTextField);

        javax.swing.GroupLayout DropStudentTabLayout = new javax.swing.GroupLayout(DropStudentTab);
        DropStudentTab.setLayout(DropStudentTabLayout);
        DropStudentTabLayout.setHorizontalGroup(
            DropStudentTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DropStudentTabLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(DropStudentTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 530, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(DropStudentTabLayout.createSequentialGroup()
                        .addComponent(chooseDropStudentLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(DropStudentTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(chooseDropStudentBox, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dropStudentSubmitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        DropStudentTabLayout.setVerticalGroup(
            DropStudentTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DropStudentTabLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(DropStudentTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chooseDropStudentLabel)
                    .addComponent(chooseDropStudentBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(dropStudentSubmitButton)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        adminPane.addTab("Drop Student", DropStudentTab);

        chooseDropClassLabel.setText("Choose Class:");

        dropClassSubmitButton.setText("Submit");
        dropClassSubmitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dropClassSubmitButtonActionPerformed(evt);
            }
        });

        droppedClassTextField.setColumns(20);
        droppedClassTextField.setRows(5);
        jScrollPane6.setViewportView(droppedClassTextField);

        javax.swing.GroupLayout DropClassAdminTabLayout = new javax.swing.GroupLayout(DropClassAdminTab);
        DropClassAdminTab.setLayout(DropClassAdminTabLayout);
        DropClassAdminTabLayout.setHorizontalGroup(
            DropClassAdminTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DropClassAdminTabLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(DropClassAdminTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 530, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(DropClassAdminTabLayout.createSequentialGroup()
                        .addComponent(chooseDropClassLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(DropClassAdminTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(chooseDropClassAdminBox, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dropClassSubmitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        DropClassAdminTabLayout.setVerticalGroup(
            DropClassAdminTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DropClassAdminTabLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(DropClassAdminTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chooseDropClassLabel)
                    .addComponent(chooseDropClassAdminBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(dropClassSubmitButton)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        adminPane.addTab("Drop Class", DropClassAdminTab);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(adminPane)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(adminPane)
        );

        jTabbedPane1.addTab("Admin", jPanel1);

        displayClassesTab.setPreferredSize(new java.awt.Dimension(744, 300));

        displayClassesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Course Code", "Seats", "Description"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(displayClassesTable);
        if (displayClassesTable.getColumnModel().getColumnCount() > 0) {
            displayClassesTable.getColumnModel().getColumn(1).setResizable(false);
            displayClassesTable.getColumnModel().getColumn(1).setHeaderValue("Seats");
            displayClassesTable.getColumnModel().getColumn(2).setHeaderValue("Description");
        }

        displayClassesDisplayButton.setText("Display");
        displayClassesDisplayButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayClassesDisplayButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout displayClassesTabLayout = new javax.swing.GroupLayout(displayClassesTab);
        displayClassesTab.setLayout(displayClassesTabLayout);
        displayClassesTabLayout.setHorizontalGroup(
            displayClassesTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(displayClassesTabLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(displayClassesTabLayout.createSequentialGroup()
                .addGap(337, 337, 337)
                .addComponent(displayClassesDisplayButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        displayClassesTabLayout.setVerticalGroup(
            displayClassesTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(displayClassesTabLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                .addComponent(displayClassesDisplayButton)
                .addGap(31, 31, 31))
        );

        studentPane.addTab("Display Classes", displayClassesTab);

        scheduleClassSelectCourseLabel.setText("Select Course");

        scheduleClassSubmitButton.setText("Submit");
        scheduleClassSubmitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                scheduleClassSubmitButtonActionPerformed(evt);
            }
        });

        scheduleClassStatusLabel.setText(" ");
        scheduleClassStatusLabel.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                scheduleClassStatusLabelMouseDragged(evt);
            }
        });

        scheduleClassSelectStudentLabel.setText("Select Student");

        scheduleClassSelectCourseComboBox.setToolTipText("");

        javax.swing.GroupLayout schedueClassTabLayout = new javax.swing.GroupLayout(schedueClassTab);
        schedueClassTab.setLayout(schedueClassTabLayout);
        schedueClassTabLayout.setHorizontalGroup(
            schedueClassTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(schedueClassTabLayout.createSequentialGroup()
                .addGroup(schedueClassTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(schedueClassTabLayout.createSequentialGroup()
                        .addGap(97, 97, 97)
                        .addComponent(scheduleClassSubmitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(schedueClassTabLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(schedueClassTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(scheduleClassStatusLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 700, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(schedueClassTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, schedueClassTabLayout.createSequentialGroup()
                                    .addComponent(scheduleClassSelectStudentLabel)
                                    .addGap(25, 25, 25)
                                    .addComponent(scheduleClassSelectStudentComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, schedueClassTabLayout.createSequentialGroup()
                                    .addComponent(scheduleClassSelectCourseLabel)
                                    .addGap(29, 29, 29)
                                    .addComponent(scheduleClassSelectCourseComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(380, Short.MAX_VALUE))
        );
        schedueClassTabLayout.setVerticalGroup(
            schedueClassTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(schedueClassTabLayout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(schedueClassTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(scheduleClassSelectCourseLabel)
                    .addComponent(scheduleClassSelectCourseComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(schedueClassTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(schedueClassTabLayout.createSequentialGroup()
                        .addComponent(scheduleClassSelectStudentLabel)
                        .addGap(15, 15, 15))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, schedueClassTabLayout.createSequentialGroup()
                        .addComponent(scheduleClassSelectStudentComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)))
                .addComponent(scheduleClassSubmitButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 195, Short.MAX_VALUE)
                .addComponent(scheduleClassStatusLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(57, 57, 57))
        );

        studentPane.addTab("Schedule Class", schedueClassTab);

        displayScheduleSelectStudentComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayScheduleSelectStudentComboBoxActionPerformed(evt);
            }
        });

        displayScheduleStudentNameLabel.setText("Select Student:");

        displayScheduleDisplayButton.setText("Display");
        displayScheduleDisplayButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayScheduleDisplayButtonActionPerformed(evt);
            }
        });

        displayScheduleTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Course Code", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(displayScheduleTable);

        javax.swing.GroupLayout displayScheduleTabLayout = new javax.swing.GroupLayout(displayScheduleTab);
        displayScheduleTab.setLayout(displayScheduleTabLayout);
        displayScheduleTabLayout.setHorizontalGroup(
            displayScheduleTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(displayScheduleTabLayout.createSequentialGroup()
                .addGap(308, 308, 308)
                .addComponent(displayScheduleDisplayButton, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(displayScheduleTabLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(displayScheduleTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(displayScheduleTabLayout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 718, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(displayScheduleTabLayout.createSequentialGroup()
                        .addComponent(displayScheduleStudentNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(displayScheduleSelectStudentComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(533, 533, 533))))
        );
        displayScheduleTabLayout.setVerticalGroup(
            displayScheduleTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(displayScheduleTabLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(displayScheduleTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(displayScheduleStudentNameLabel)
                    .addComponent(displayScheduleSelectStudentComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 58, Short.MAX_VALUE)
                .addComponent(displayScheduleDisplayButton)
                .addGap(19, 19, 19))
        );

        studentPane.addTab("Display Schedule", displayScheduleTab);

        dropClassChooseStudentLabel.setText("Choose Student:");

        dropClassAdminSubmitButton.setText("Submit");
        dropClassAdminSubmitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dropClassAdminSubmitButtonActionPerformed(evt);
            }
        });

        dropClassChooseClassLabel.setText("Choose Class:");

        dropClassChooseStudentStudentBox.setToolTipText("");
        dropClassChooseStudentStudentBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dropClassChooseStudentStudentBoxActionPerformed(evt);
            }
        });

        dropClassStudentTextArea.setColumns(20);
        dropClassStudentTextArea.setRows(5);
        dropClassScrollPane.setViewportView(dropClassStudentTextArea);

        javax.swing.GroupLayout dropClassStudentTabLayout = new javax.swing.GroupLayout(dropClassStudentTab);
        dropClassStudentTab.setLayout(dropClassStudentTabLayout);
        dropClassStudentTabLayout.setHorizontalGroup(
            dropClassStudentTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dropClassStudentTabLayout.createSequentialGroup()
                .addGroup(dropClassStudentTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(dropClassStudentTabLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(dropClassStudentTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(dropClassChooseClassLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(dropClassChooseStudentLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 109, Short.MAX_VALUE))
                        .addGroup(dropClassStudentTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(dropClassStudentTabLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(dropClassChooseStudentStudentBox, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dropClassStudentTabLayout.createSequentialGroup()
                                .addGap(70, 70, 70)
                                .addComponent(dropClassChooseClassStudentBox, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(dropClassStudentTabLayout.createSequentialGroup()
                        .addGap(97, 97, 97)
                        .addComponent(dropClassAdminSubmitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(dropClassStudentTabLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(dropClassScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 477, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(603, Short.MAX_VALUE))
        );
        dropClassStudentTabLayout.setVerticalGroup(
            dropClassStudentTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dropClassStudentTabLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(dropClassStudentTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dropClassChooseStudentLabel)
                    .addComponent(dropClassChooseStudentStudentBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(dropClassStudentTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dropClassChooseClassLabel)
                    .addComponent(dropClassChooseClassStudentBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(dropClassAdminSubmitButton)
                .addGap(37, 37, 37)
                .addComponent(dropClassScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(24, Short.MAX_VALUE))
        );

        studentPane.addTab("Drop Class", dropClassStudentTab);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(studentPane))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(studentPane, javax.swing.GroupLayout.PREFERRED_SIZE, 440, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(45, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Student", jPanel2);

        jLabel2.setFont(new java.awt.Font("Comic Sans MS", 1, 16)); // NOI18N
        jLabel2.setText("Current Semester: ");

        currentSemesterLabel.setFont(new java.awt.Font("Comic Sans MS", 0, 16)); // NOI18N
        currentSemesterLabel.setText("           ");

        currentSemesterComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        currentSemesterComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                currentSemesterComboBoxActionPerformed(evt);
            }
        });

        changeSemesterButton.setText("Change Semester");
        changeSemesterButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changeSemesterButtonActionPerformed(evt);
            }
        });

        aboutButton.setText("About");
        aboutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aboutButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTabbedPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(currentSemesterLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(currentSemesterComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(changeSemesterButton)
                                .addGap(31, 31, 31)
                                .addComponent(aboutButton)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(currentSemesterLabel)
                    .addComponent(currentSemesterComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(changeSemesterButton)
                    .addComponent(aboutButton))
                .addGap(30, 30, 30)
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    /*
    TODO: check out making the combo boxes dependent on DB instead of queries
    */
    private void aboutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aboutButtonActionPerformed
        // TODO add your handling code here:
        // display about information.
        JOptionPane.showMessageDialog(null, "Author: " + author + " Project: " + project);
    }//GEN-LAST:event_aboutButtonActionPerformed

    // admin function
    private void addSemesterSubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addSemesterSubmitButtonActionPerformed
        String semester = addSemesterTextfield.getText();
        if(SemesterQueries.getSemesterList().contains(semester)){
            addSemesterStatusLabel.setText("Semester " + semester + " already exists in the database");
        }
        else{
            SemesterQueries.addSemester(semester);
            currentSemester = semester;
            addSemesterStatusLabel.setText("Semester " + semester + " has been added.");
            currentSemesterComboBox.addItem(semester);
        }        
        rebuildSemesterComboBoxes();
    }//GEN-LAST:event_addSemesterSubmitButtonActionPerformed
    
    private void addCourseCodeTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCourseCodeTextFieldActionPerformed
        // TODO add your handling code here:
        // String courseCode = addClassCourseCodeTextField.getText();
        
    }//GEN-LAST:event_addCourseCodeTextFieldActionPerformed
    
    private void addCourseDescriptionTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCourseDescriptionTextFieldActionPerformed
        // TODO add your handling code here:
        // String courseDescription = addCourseDescriptionTextField.getText();
    }//GEN-LAST:event_addCourseDescriptionTextFieldActionPerformed

    // admin function
    private void addCourseSubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCourseSubmitButtonActionPerformed
        // TODO add your handling code here:
        String code = addCourseCodeTextField.getText();
        String description = addCourseDescriptionTextField.getText();
        
        if(CourseQueries.getAllCourseCodes().contains(code)){
            addCourseStatusLabel.setText("Course " + code + " is already in the database");
        }
        else{
            CourseEntry course = new CourseEntry(code, description);
            CourseQueries.addCourse(course);
            addCourseStatusLabel.setText("Course " + code + " has been added to the database");
//            addClassCourseCodeComboBox.addItem(code);
//            scheduleClassSelectCourseComboBox.addItem(code);
        }
   
        rebuildSemesterComboBoxes();
        rebuildCourseComboBoxes();
    }//GEN-LAST:event_addCourseSubmitButtonActionPerformed

    
 
    
    // admin function
    
    private void addClassSubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addClassSubmitButtonActionPerformed
        // TODO add your handling code here:
        
        String sem = currentSemester;
        String code = addClassCourseCodeComboBox.getSelectedItem().toString();
        int seats = (int) addClassCapacitySpinner.getValue();
        
        if(ClassQueries.getAllCourseCodes(sem).contains(code)){
            addClassStatusLabel.setText("Class " + code + " is already scheduled for semester " + sem);
        }
        else{
            ClassEntry cla = new ClassEntry(sem, code, seats);
            ClassQueries.addClass(cla);
            // displayClassesTable.
            addClassStatusLabel.setText("Class " + cla.getCourse() + " has been added to semester " + cla.getSem());
        }
        
        
        rebuildSemesterComboBoxes();
        rebuildClassComboBoxes();
        
    }//GEN-LAST:event_addClassSubmitButtonActionPerformed
    
    public static void clearDB(){
        ClassQueries.clearClasses();
        CourseQueries.clearCourses();
        ScheduleQueries.clearSchedule();
        SemesterQueries.clearSemesters();
        StudentQueries.clearStudents();
    }
    
    // admin function
    private void addStudentSubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addStudentSubmitButtonActionPerformed
        // TODO add your handling code here:
        String id = addStudentIDTextField.getText();
        String first = addStudentFirstNameTextField.getText();
        String last = addStudentLastNameTextField.getText();

        // check if already in + check gui switch course to class result box
        if(id.length()<1){
            addStudentStatusLabel.setText("All students must have an ID");
        }
       
        else if(StudentQueries.getStudentCodes().contains(id)){
            addStudentStatusLabel.setText("ID " + id + " is already in use");
        }
        else{
            StudentEntry student = new StudentEntry(id, first, last);
            StudentQueries.addStudent(student);
        
            addStudentStatusLabel.setText("Student " + first + " " + last +
                " has been added to the database with ID " + id);
            // scheduleClassSelectStudentComboBox.addItem(student.getID() + ", " + student.getFirst() + " " + student.getLast());
            // displayScheduleSelectStudentComboBox.addItem(student.getID());
        }
        
        rebuildSemesterComboBoxes();
        rebuildClassComboBoxes();
        rebuildStudentComboBoxes();
    }//GEN-LAST:event_addStudentSubmitButtonActionPerformed

    private void changeSemesterButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changeSemesterButtonActionPerformed
        // TODO add your handling code here:
        currentSemester = currentSemesterComboBox.getSelectedItem().toString();
        currentSemesterLabel.setText(currentSemester);
        
        rebuildSemesterComboBoxes();
        rebuildClassComboBoxes();
        rebuildScheduleComboBoxes();
    }//GEN-LAST:event_changeSemesterButtonActionPerformed
    
    private void addClassCourseCodeComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addClassCourseCodeComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addClassCourseCodeComboBoxActionPerformed

    private void currentSemesterComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_currentSemesterComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_currentSemesterComboBoxActionPerformed

    private void displayScheduleDisplayButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayScheduleDisplayButtonActionPerformed
    // TODO add your handling code here:
    
        StudentEntry temp = (StudentEntry) displayScheduleSelectStudentComboBox.getSelectedItem();
        if(temp != null){
            String id = temp.getID();
            ArrayList<ScheduleEntry> schedule = ScheduleQueries.getScheduleByStudent(currentSemester, id);
            if(schedule.size()>0){
                DefaultTableModel displayScheduleTableModel = (DefaultTableModel)displayScheduleTable.getModel();
                displayScheduleTableModel.setNumRows(0);

                Object[] row = new Object[2];
                for(ScheduleEntry s: schedule){
                    row[0] = s.getScheduleCode();
                    row[1] = s.getScheduleStatus();
                    displayScheduleTableModel.addRow(row);
                }    
            }
           
        }
        
    }//GEN-LAST:event_displayScheduleDisplayButtonActionPerformed

    private void scheduleClassStatusLabelMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_scheduleClassStatusLabelMouseDragged
        // TODO add your handling code here:
    }//GEN-LAST:event_scheduleClassStatusLabelMouseDragged

    //student cnt enroll in same class twice, student cant enroll in class if full
    
    // student function 
    private void scheduleClassSubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_scheduleClassSubmitButtonActionPerformed
        String sem = currentSemester;
        String code = scheduleClassSelectCourseComboBox.getSelectedItem().toString();
        StudentEntry stu = (StudentEntry) scheduleClassSelectStudentComboBox.getSelectedItem();
        String id = stu.getID();
//        int i = id.indexOf(",");
//        id = id.substring(0, i);
        
        String status;
        Timestamp time;

        //need to check if a student is already scheduled or waitlisted for a class in this same semester
        if(ScheduleQueries.isScheduled(id, code, sem).equals("S")){
            scheduleClassStatusLabel.setText(stu + " is already scheduled for "+ code + " in the " + sem + " semester");
        }
        else if(ScheduleQueries.isScheduled(id, code, sem).equals("W")){
            scheduleClassStatusLabel.setText(stu + " is already waitlisted for "+ code + " in the " + sem + " semester");
        }

        else{

            if(ClassQueries.getClassSeats(sem, code) > 0){
                status = "S";
                time = new Timestamp(java.lang.System.currentTimeMillis());
                ScheduleEntry entry = new ScheduleEntry(sem, code, id, status, time);
                ScheduleQueries.addScheduleEntry(entry);
                scheduleClassStatusLabel.setText(stu + " has been successfully scheduled for " + code + " in the " + sem + " semester.");
                // decrement class seats in query
            }
            else{
                status = "W";
                time = new Timestamp(java.lang.System.currentTimeMillis());
                ScheduleEntry entry = new ScheduleEntry(sem, code, id, status, time);
                ScheduleQueries.addScheduleEntry(entry);
                scheduleClassStatusLabel.setText("Class is full. " + stu + " has been placed on the waitlist at " + time.toString());

            }
        }
    }//GEN-LAST:event_scheduleClassSubmitButtonActionPerformed

    private void displayScheduleSelectStudentComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayScheduleSelectStudentComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_displayScheduleSelectStudentComboBoxActionPerformed

    private void displayClassesDisplayButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayClassesDisplayButtonActionPerformed
        // TODO add your handling code here:
        ArrayList<ClassDescription> classes = MultiTableQueries.getAllClassDescriptions(currentSemester);
       
        DefaultTableModel displayClassesTableModel = (DefaultTableModel) displayClassesTable.getModel();
        displayClassesTableModel.setNumRows(0);
        
        Object[] row = new Object[3];
        for(ClassDescription c: classes){
            row[0] = c.getCode();
            row[1] = c.getSeats();
            row[2] = c.getDescription();
            displayClassesTableModel.addRow(row);
        }
    }//GEN-LAST:event_displayClassesDisplayButtonActionPerformed

    private void dropStudentSubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dropStudentSubmitButtonActionPerformed
        // TODO add your handling code here:
        StudentEntry student = (StudentEntry) chooseDropStudentBox.getSelectedItem();
        
        String output = student + " has been dropped from the list of students.\n\n";
        
        ArrayList<String> sems = SemesterQueries.getSemesterList();
        for(String s: sems){
            ArrayList<ScheduleEntry> schedule = ScheduleQueries.getScheduleByStudent(s, student.getID());
            
            for(ScheduleEntry e:schedule){
                ScheduleQueries.dropStudentScheduleByCourse(s, e.getScheduleID(), e.getScheduleCode());
                
                if(e.getScheduleStatus().equals("W")){
                    output+= student + " dropped from waitlist for " + e.getScheduleCode() + " in the " + s + " semester\n";
                }
                else{
                    output += student + " removed from " + e.getScheduleCode() + " in the " + s + " semester\n";
                    ScheduleEntry replace = ScheduleQueries.getTopWaitlist(s, e.getScheduleCode());
                    if(replace != null){
                        ScheduleQueries.updateScheduleEntry(replace);
                        output+= replace.getScheduleID() + " added to " + replace.getScheduleCode() + " in the " + replace.getScheduleSem() + " semester\n";
                }
            }
        }
        }
        StudentQueries.dropStudent(student.getID());
        
        // get arraylist of sems
        // loop through semesters
        // for each sem, get schedule for student
        // loop through student schedule
            //if student on waitlist
            // output += student dropped from waitlist
        
        // 
        
        droppedStudentTextField.setText(output);
        rebuildStudentComboBoxes();
    }//GEN-LAST:event_dropStudentSubmitButtonActionPerformed

    private void dropClassSubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dropClassSubmitButtonActionPerformed
        // TODO add your handling code here:
        String courseCode = chooseDropClassAdminBox.getSelectedItem().toString();
        ArrayList<StudentEntry> scheduled = MultiTableQueries.getScheduledStudentsByClass(currentSemester, courseCode);
        ArrayList<StudentEntry> waitlist = MultiTableQueries.getWaitlistedStudentsByClass(currentSemester, courseCode);
        
        String output = "Scheduled students dropped from " + courseCode + ":\n";
        for(StudentEntry s: scheduled){
            output+= s + "\n";
        }
        output += "\nWaitlisted students dropped from " + courseCode + ":\n";
        for(StudentEntry w: waitlist){
            output+= w + "\n";
        }
        output += "For semester: " + currentSemester;
        ScheduleQueries.dropScheduleByCourse(currentSemester, courseCode);
        droppedClassTextField.setText(output);
        
        rebuildClassComboBoxes();
    }//GEN-LAST:event_dropClassSubmitButtonActionPerformed

    // admin
    private void displayClassButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayClassButtonActionPerformed
        // TODO add your handling code here:
        Object o = displayClassChooseClassComboBox.getSelectedItem();
        String cc = o.toString();
        ArrayList<StudentEntry> students = MultiTableQueries.getScheduledStudentsByClass(currentSemester, cc);
        DefaultTableModel scheduledStudentsTableModel = (DefaultTableModel) scheduledStudentsTable.getModel();
        scheduledStudentsTableModel.setNumRows(0);
        
        String[] row = new String[3];
        for(StudentEntry s: students){
            row[0] = s.getFirst();
            row[1] = s.getLast();
            row[2] = s.getID();
            scheduledStudentsTableModel.addRow(row);
        }
        
        students.clear();
        students = MultiTableQueries.getWaitlistedStudentsByClass(currentSemester, cc);
        DefaultTableModel waitlistedStudentsTableModel = (DefaultTableModel) waitlistedStudentsTable.getModel();
        waitlistedStudentsTableModel.setNumRows(0);
        
        for(StudentEntry s: students){
            row[0] = s.getFirst();
            row[1] = s.getLast();
            row[2] = s.getID();
            waitlistedStudentsTableModel.addRow(row);
        }

    }//GEN-LAST:event_displayClassButtonActionPerformed

    private void dropClassAdminSubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dropClassAdminSubmitButtonActionPerformed
        // TODO add your handling code here:
        StudentEntry student = (StudentEntry) dropClassChooseStudentStudentBox.getSelectedItem();
        String code = dropClassChooseClassStudentBox.getSelectedItem().toString();
        ArrayList<ScheduleEntry> schedule = ScheduleQueries.getScheduleByStudent(currentSemester, student.getID());
        ScheduleQueries.dropStudentScheduleByCourse(currentSemester, student.getID(), code);
        String status = "N";
        for(ScheduleEntry e: schedule){
            if(e.getScheduleCode().equals(code)){
                status = e.getScheduleStatus();
            }
        }
        
        String output = "";
        
        if(status.equals("W")){
            output+= student + " dropped from waitlist for " + code + " in the " + currentSemester + " semester\n";
        }
        else{
            output += student + " removed from " + code + " in the " + currentSemester + " semester\n";
            ScheduleEntry replace = ScheduleQueries.getTopWaitlist(currentSemester, code);
            if(replace != null){
                ScheduleQueries.updateScheduleEntry(replace);
                output+= StudentQueries.getStudent(replace.getScheduleID()) + " added to " + replace.getScheduleCode() + " in the " + replace.getScheduleSem() + " semester\n";
        }

            dropClassStudentTextArea.setText(output);
            rebuildScheduleComboBoxes();
            
    }//GEN-LAST:event_dropClassAdminSubmitButtonActionPerformed
    }    
    // when a new student is selected rebuildClassBoxes so that the second box has the right entries
    private void dropClassChooseStudentStudentBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dropClassChooseStudentStudentBoxActionPerformed
        // TODO add your handling code here:
        rebuildScheduleComboBoxes();
    }//GEN-LAST:event_dropClassChooseStudentStudentBoxActionPerformed
   
    
            
    private void checkData() {
        try {
            FileReader reader = new FileReader("xzq789yy.txt");
            BufferedReader breader = new BufferedReader(reader);

            String encodedAuthor = breader.readLine();
            String encodedProject = breader.readLine();
            byte[] decodedAuthor = Base64.getDecoder().decode(encodedAuthor);
            author = new String(decodedAuthor);
            byte[] decodedProject = Base64.getDecoder().decode(encodedProject);
            project = new String(decodedProject);
            reader.close();

        } catch (FileNotFoundException e) {
            //get user info and create file
            author = JOptionPane.showInputDialog("Enter your first and last name.");
            project = "Course Scheduler Spring 2024";

            //write data to the data file.
            try {
                FileWriter writer = new FileWriter("xzq789yy.txt", true);
                BufferedWriter bufferedWriter = new BufferedWriter(writer);

                // encode the output data.
                String encodedAuthor = Base64.getEncoder().encodeToString(author.getBytes());

                bufferedWriter.write(encodedAuthor);
                bufferedWriter.newLine();

                String encodedProject = Base64.getEncoder().encodeToString(project.getBytes());
                bufferedWriter.write(encodedProject);

                bufferedWriter.close();
            } catch (IOException ioe) {
                ioe.printStackTrace();
                System.exit(1);
            }

        } catch (IOException e) {
            e.printStackTrace();
            System.exit(1);
        }

    }   

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                // reset the database
                // clearDB();
                
                // rebuildAllComboBoxes();
                new MainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel AddClassTab;
    private javax.swing.JPanel AddSemesterTab;
    private javax.swing.JPanel DisplayClassListTab;
    private javax.swing.JPanel DropClassAdminTab;
    private javax.swing.JPanel DropStudentTab;
    private javax.swing.JButton aboutButton;
    private javax.swing.JLabel addClassCapacityLabel;
    private javax.swing.JSpinner addClassCapacitySpinner;
    private javax.swing.JComboBox<String> addClassCourseCodeComboBox;
    private javax.swing.JLabel addClassCourseCodeLabel;
    private javax.swing.JLabel addClassStatusLabel;
    private javax.swing.JButton addClassSubmitButton;
    private javax.swing.JLabel addCourseCodeLabel;
    private javax.swing.JTextField addCourseCodeTextField;
    private javax.swing.JLabel addCourseDescriptionLabel;
    private javax.swing.JTextField addCourseDescriptionTextField;
    private javax.swing.JLabel addCourseStatusLabel;
    private javax.swing.JButton addCourseSubmitButton;
    private javax.swing.JPanel addCourseTab;
    private javax.swing.JLabel addSemesterLabel;
    private javax.swing.JLabel addSemesterStatusLabel;
    private javax.swing.JButton addSemesterSubmitButton;
    private javax.swing.JTextField addSemesterTextfield;
    private javax.swing.JLabel addStudentFirstNameLabel;
    private javax.swing.JTextField addStudentFirstNameTextField;
    private javax.swing.JLabel addStudentIDLabel;
    private javax.swing.JTextField addStudentIDTextField;
    private javax.swing.JLabel addStudentLastNameLabel;
    private javax.swing.JTextField addStudentLastNameTextField;
    private javax.swing.JLabel addStudentStatusLabel;
    private javax.swing.JButton addStudentSubmitButton;
    private javax.swing.JPanel addStudentTab;
    private javax.swing.JTabbedPane adminPane;
    private javax.swing.JButton changeSemesterButton;
    private javax.swing.JComboBox<String> chooseDropClassAdminBox;
    private javax.swing.JLabel chooseDropClassLabel;
    private javax.swing.JComboBox<String> chooseDropStudentBox;
    private javax.swing.JLabel chooseDropStudentLabel;
    private javax.swing.JComboBox<String> currentSemesterComboBox;
    private javax.swing.JLabel currentSemesterLabel;
    private javax.swing.JButton displayClassButton;
    private javax.swing.JComboBox<String> displayClassChooseClassComboBox;
    private javax.swing.JLabel displayClassChooseClassLabel;
    private javax.swing.JButton displayClassesDisplayButton;
    private javax.swing.JPanel displayClassesTab;
    private javax.swing.JTable displayClassesTable;
    private javax.swing.JButton displayScheduleDisplayButton;
    private javax.swing.JComboBox<String> displayScheduleSelectStudentComboBox;
    private javax.swing.JLabel displayScheduleStudentNameLabel;
    private javax.swing.JPanel displayScheduleTab;
    private javax.swing.JTable displayScheduleTable;
    private javax.swing.JButton dropClassAdminSubmitButton;
    private javax.swing.JLabel dropClassChooseClassLabel;
    private javax.swing.JComboBox<String> dropClassChooseClassStudentBox;
    private javax.swing.JLabel dropClassChooseStudentLabel;
    private javax.swing.JComboBox<String> dropClassChooseStudentStudentBox;
    private javax.swing.JScrollPane dropClassScrollPane;
    private javax.swing.JPanel dropClassStudentTab;
    private javax.swing.JTextArea dropClassStudentTextArea;
    private javax.swing.JButton dropClassSubmitButton;
    private javax.swing.JButton dropStudentSubmitButton;
    private javax.swing.JTextArea droppedClassTextField;
    private javax.swing.JTextArea droppedStudentTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JPanel schedueClassTab;
    private javax.swing.JComboBox<String> scheduleClassSelectCourseComboBox;
    private javax.swing.JLabel scheduleClassSelectCourseLabel;
    private javax.swing.JComboBox<String> scheduleClassSelectStudentComboBox;
    private javax.swing.JLabel scheduleClassSelectStudentLabel;
    private javax.swing.JLabel scheduleClassStatusLabel;
    private javax.swing.JButton scheduleClassSubmitButton;
    private javax.swing.JTable scheduledStudentsTable;
    private javax.swing.JLabel scheduledStudentsTableLabel;
    private javax.swing.JTabbedPane studentPane;
    private javax.swing.JTable waitlistedStudentsTable;
    private javax.swing.JLabel waitlistedStudentsTableLabel;
    // End of variables declaration//GEN-END:variables
}
